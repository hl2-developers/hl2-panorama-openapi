{
  "openapi": "3.0.2",
  "info": {
    "title": "hl2 Panorama API",
    "description": "Welcome to the hl2 Panorama API specification. We will commit ourselves to support the library and maintain backwards compatibility in the future, but we reserve the right to make incompatible changes when necessary. If you experience any issues, contact support.",
    "version": "v1",
    "contact": {
      "name": "API support",
      "email": "support@hl2.com"
    },
    "license": {
      "name": "Copyright (C) hl2",
      "url": "https://github.com/hl2/hl2-panorama-openapi/blob/master/LICENSE.md"
    }
  },
  "servers": [
    {
      "url": "https://api.hl2.com/panorama/v1",
      "description": "The production server"
    }
  ],
  "security": [{ "bearerAuth": [] }],
  "tags": [
    {
      "name": "Accounts",
      "description": "Everything about accounts"
    },
    {
      "name": "Organizations",
      "description": "Everything about organizations"
    },
    {
      "name": "Teams",
      "description": "Everything about organization teams"
    },
    {
      "name": "Devices",
      "description": "Everything about organization devices"
    },
    {
      "name": "Products",
      "description": "Everything about organization products"
    },
    {
      "name": "Applications",
      "description": "Everything about organization applications"
    },
    {
      "name": "Help",
      "description": "Developer utilities"
    }
  ],
  "paths": {
    "/help/languages": {
      "get": {
        "tags": ["Help"],
        "description": "Returns the supported languages",
        "responses": {
          "200": {
            "description": "Supported language array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "nativeName": {
                        "type": "string"
                      }
                    },
                    "example": {
                      "code": "en",
                      "name": "English",
                      "nativeName": "English"
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "429": { "$ref": "#/components/responses/429" },
          "500": { "$ref": "#/components/responses/500" }
        }
      }
    },
    "/help/timezones": {
      "get": {
        "tags": ["Help"],
        "description": "Returns the supported timezones",
        "responses": {
          "200": {
            "description": "Supported timezone array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "Africa/Abidjan"
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "429": { "$ref": "#/components/responses/429" },
          "500": { "$ref": "#/components/responses/500" }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized, your API key is not valid",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "429": {
        "description": "Too Many Requests, API rate limit exceeded",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error, try again later or contact support",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}

{
  "openapi": "3.0.2",
  "info": {
    "title": "hl2 Panorama API",
    "description": "Welcome to the hl2 Panorama API specification. We will commit ourselves to support the library and maintain backwards compatibility in the future, but we reserve the right to make incompatible changes when necessary. If you experience any issues, contact support.",
    "version": "v1",
    "contact": {
      "name": "API support",
      "email": "support@hl2.com"
    },
    "license": {
      "name": "Copyright (C) hl2",
      "url": "https://github.com/hl2/hl2-panorama-openapi/blob/master/LICENSE.md"
    }
  },
  "servers": [
    {
      "url": "https://api.hl2.com/panorama/v1",
      "description": "The production server"
    }
  ],
  "security": [{ "bearerAuth": [] }],
  "tags": [
    {
      "name": "Accounts",
      "description": "Everything about accounts"
    },
    {
      "name": "Organizations",
      "description": "Everything about organizations"
    },
    {
      "name": "Teams",
      "description": "Everything about organization teams"
    },
    {
      "name": "Devices",
      "description": "Everything about organization devices"
    },
    {
      "name": "Products",
      "description": "Everything about organization products"
    },
    {
      "name": "Applications",
      "description": "Everything about organization applications"
    },
    {
      "name": "Help",
      "description": "Developer utilities"
    }
  ],
  "paths": {
    "/account": {
      "get": {
        "tags": ["Accounts"],
        "description": "Get your account details",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Account" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "500": { "$ref": "#/components/responses/500" }
        }
      },
      "put": {
        "tags": ["Accounts"],
        "description": "Update your account details",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "username"],
                "properties": {
                  "email": { "type": "string" },
                  "name": { "type": "string" },
                  "username": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Account" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "422": { "$ref": "#/components/responses/422" },
          "500": { "$ref": "#/components/responses/500" }
        }
      }
    },
    "/accounts": {
      "get": {
        "tags": ["Accounts"],
        "description": "List all the active users of the hl2 Panorama platform, or search for one using their name or username. This is useful to figure out their IDs to add them to your organization",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "The number of items to be returned by page",
            "schema": { "type": "integer", "default": 10 }
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page number",
            "schema": { "type": "integer", "default": 1 }
          },
          {
            "in": "query",
            "name": "q",
            "description": "The search regex in username and name fields",
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "sort",
            "description": "The sort order",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Accounts" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "500": { "$ref": "#/components/responses/500" }
        }
      }
    },
    "/organizations/{organizationId}": {
      "get": {
        "tags": ["Organizations"],
        "parameters": [{ "$ref": "#/components/parameters/organizationId" }],
        "description": "Get your organization details",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Organization" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "500": { "$ref": "#/components/responses/500" }
        }
      },
      "put": {
        "tags": ["Organizations"],
        "parameters": [{ "$ref": "#/components/parameters/organizationId" }],
        "description": "Update your organization details",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "username"],
                "properties": {
                  "email": { "type": "string" },
                  "name": { "type": "string" },
                  "username": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Organization" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "422": { "$ref": "#/components/responses/422" },
          "500": { "$ref": "#/components/responses/500" }
        }
      }
    },
    "/organizations/{organizationId}/products": {
      "parameters": [{ "$ref": "#/components/parameters/organizationId" }],
      "get": {
        "tags": ["Organizations"],
        "description": "List the products for your organization. Public products not owned by your organization are not listed",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "The number of items to be returned by page",
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page number",
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "q",
            "description": "The search regex in name, slug and versionfields",
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "sort",
            "description": "The sort order",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Products" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "500": { "$ref": "#/components/responses/500" }
        }
      },
      "post": {
        "tags": ["Organizations"],
        "description": "Create a product for your organization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "version", "variables"],
                "properties": {
                  "name": { "type": "string" },
                  "version": { "type": "string" },
                  "variables": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/ProductVariable" }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Product" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "422": { "$ref": "#/components/responses/422" },
          "500": { "$ref": "#/components/responses/500" }
        }
      }
    },
    "/products": {
      "get": {
        "tags": ["Products"],
        "description": "List all the public products, whether they belong to your organization or not",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "The number of items to be returned by page",
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page number",
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "name": "q",
            "description": "The search regex in name, slug and versionfields",
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "sort",
            "description": "The sort order",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of products",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Products" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "500": { "$ref": "#/components/responses/500" }
        }
      }
    },
    "/products/{organizationId}/{productId}": {
      "parameters": [
        { "$ref": "#/components/parameters/organizationId" },
        { "$ref": "#/components/parameters/productId" }
      ],
      "get": {
        "tags": ["Products"],
        "description": "Get the details of one of your organization’s products, or of a public product not owned by your organization",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Product" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "500": { "$ref": "#/components/responses/500" }
        }
      },
      "put": {
        "tags": ["Products"],
        "description": "List all the public products, whether they belong to your organization or not",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "variables", "version"],
                "properties": {
                  "name": { "type": "string" },
                  "version": { "type": "string" },
                  "variables": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/ProductVariable" }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Product" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "422": { "$ref": "#/components/responses/422" },
          "500": { "$ref": "#/components/responses/500" }
        }
      },
      "delete": {
        "tags": ["Products"],
        "description": "Delete one of your organization’s products. This will only be possible if the product is not public, and not used by any device",
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "500": { "$ref": "#/components/responses/500" }
        }
      }
    },
    "/help/languages": {
      "get": {
        "tags": ["Help"],
        "description": "Returns the supported languages",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "nativeName": {
                        "type": "string"
                      }
                    },
                    "example": {
                      "code": "en",
                      "name": "English",
                      "nativeName": "English"
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "429": { "$ref": "#/components/responses/429" },
          "500": { "$ref": "#/components/responses/500" }
        }
      }
    },
    "/help/timezones": {
      "get": {
        "tags": ["Help"],
        "description": "Returns the supported timezones",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "Africa/Abidjan"
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "429": { "$ref": "#/components/responses/429" },
          "500": { "$ref": "#/components/responses/500" }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Accounts": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "type": { "type": "string" },
            "name": { "type": "string" },
            "username": { "type": "string" },
            "gravatarURL": { "type": "string" }
          }
        }
      },
      "Account": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "email": { "type": "string" },
          "username": { "type": "string" },
          "name": { "type": "string" },
          "type": { "type": "string" },
          "gravatarURL": { "type": "string" },
          "createdAt": { "type": "string" },
          "updatedAt": { "type": "string" },
          "disabled": { "type": "boolean" }
        }
      },
      "Products": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "name": { "type": "string" },
            "slug": { "type": "string" },
            "version": { "type": "string" },
            "organizationId": { "type": "string" },
            "public": { "type": "boolean" }
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "slug": { "type": "string" },
          "version": { "type": "string" },
          "organizationId": { "type": "string" },
          "variables": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ProductVariable" }
          },
          "public": { "type": "boolean" },
          "deviceCount": { "type": "number" },
          "createdAt": { "type": "string" },
          "updatedAt": { "type": "string" }
        }
      },
      "ProductVariable": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": { "type": "string" },
            "unit": { "type": "string" },
            "type": {
              "type": "string",
              "enum": [
                "BOOL",
                "TXT",
                "INT16",
                "INT64",
                "FLOAT32",
                "UNINT8",
                "UNINT16",
                "UNINT32"
              ]
            },
            "mappings": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "streamId": { "type": "number" },
                  "streamType": {
                    "type": "string",
                    "enum": ["BIN", "RAW", "TXT"]
                  },
                  "varNumber": { "type": "number" }
                }
              }
            }
          }
        }
      },
      "Organization": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "username": { "type": "string" },
          "email": { "type": "string" },
          "role": { "type": "string" },
          "type": { "type": "string" },
          "memberCount": { "type": "number" },
          "disabled": { "type": "boolean" },
          "createdAt": { "type": "string" },
          "updatedAt": { "type": "string" }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    },
    "parameters": {
      "organizationId": {
        "in": "path",
        "name": "organizationId",
        "description": "The organization id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "productId": {
        "in": "path",
        "name": "productId",
        "description": "The product id",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "204": {
        "description": "No Content"
      },
      "401": {
        "description": "Unauthorized, your API key is not valid",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "422": {
        "description": "Unprocessable Entity, You have sent invalid fields (details are provided in the error body)",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "429": {
        "description": "Too Many Requests, API rate limit exceeded",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error, try again later or contact support",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}

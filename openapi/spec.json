{
  "openapi": "3.0.2",
  "info": {
    "title": "hl2 Panorama API",
    "description": "Welcome to the hl2 Panorama API specification. We will commit ourselves to support the library and maintain backwards compatibility in the future, but we reserve the right to make incompatible changes when necessary. If you experience any issues, contact support",
    "version": "v1",
    "contact": {
      "name": "API support",
      "email": "support@hl2.com"
    },
    "license": {
      "name": "Copyright (C) hl2",
      "url": "https://github.com/hl2/hl2-panorama-openapi/blob/master/LICENSE.md"
    }
  },
  "servers": [
    {
      "url": "https://api.hl2.com/panorama/v1"
    }
  ],
  "security": [{ "bearerAuth": [] }],
  "tags": [
    {
      "name": "Accounts",
      "description": "Everything about accounts"
    },
    {
      "name": "Organizations",
      "description": "Everything about organizations"
    },
    {
      "name": "Teams",
      "description": "Everything about organization teams"
    },
    {
      "name": "Devices",
      "description": "Everything about organization devices"
    },
    {
      "name": "Products",
      "description": "Everything about organization products"
    },
    {
      "name": "Applications",
      "description": "Everything about organization applications"
    },
    {
      "name": "Help",
      "description": "Developer utilities"
    }
  ],
  "paths": {
    "/account": {
      "get": {
        "tags": ["Accounts"],
        "description": "Get your account details",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Account" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "500": { "$ref": "#/components/responses/500" }
        }
      },
      "put": {
        "tags": ["Accounts"],
        "description": "Update your account details",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "username"],
                "properties": {
                  "email": { "type": "string" },
                  "name": { "type": "string" },
                  "username": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Account" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "422": { "$ref": "#/components/responses/422" },
          "500": { "$ref": "#/components/responses/500" }
        }
      }
    },
    "/accounts": {
      "get": {
        "tags": ["Accounts"],
        "description": "List all the active users of the hl2 Panorama platform, or search for one using their name or username. This is useful to figure out their IDs to add them to your organization",
        "parameters": [
          { "$ref": "#/components/parameters/limit" },
          { "$ref": "#/components/parameters/page" },
          { "$ref": "#/components/parameters/q" },
          { "$ref": "#/components/parameters/sort" }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Accounts" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "500": { "$ref": "#/components/responses/500" }
        }
      }
    },
    "/help/languages": {
      "get": {
        "tags": ["Help"],
        "description": "Returns the supported languages",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "nativeName": {
                        "type": "string"
                      }
                    },
                    "example": {
                      "code": "en",
                      "name": "English",
                      "nativeName": "English"
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "429": { "$ref": "#/components/responses/429" },
          "500": { "$ref": "#/components/responses/500" }
        }
      }
    },
    "/help/timezones": {
      "get": {
        "tags": ["Help"],
        "description": "Returns the supported timezones",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "Africa/Abidjan"
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "429": { "$ref": "#/components/responses/429" },
          "500": { "$ref": "#/components/responses/500" }
        }
      }
    },
    "/organizations/{organizationId}": {
      "parameters": [{ "$ref": "#/components/parameters/organizationId" }],
      "get": {
        "tags": ["Organizations"],
        "description": "Get your organization details",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Organization" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" },
          "500": { "$ref": "#/components/responses/500" }
        }
      },
      "put": {
        "tags": ["Organizations"],
        "description": "Update your organization details",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "username"],
                "properties": {
                  "email": { "type": "string" },
                  "name": { "type": "string" },
                  "username": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Organization" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" },
          "422": { "$ref": "#/components/responses/422" },
          "500": { "$ref": "#/components/responses/500" }
        }
      }
    },
    "/organizations/{organizationId}/applications": {
      "parameters": [{ "$ref": "#/components/parameters/organizationId" }],
      "get": {
        "tags": ["Applications"],
        "description": "List the applications for your organization",
        "parameters": [
          { "$ref": "#/components/parameters/limit" },
          { "$ref": "#/components/parameters/page" },
          { "$ref": "#/components/parameters/q" },
          { "$ref": "#/components/parameters/sort" }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      { "$ref": "#/components/schemas/ApplicationInArray" },
                      {
                        "type": "object",
                        "properties": {
                          "permission": {
                            "$ref": "#/components/schemas/ApplicationPermission"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" },
          "500": { "$ref": "#/components/responses/500" }
        }
      },
      "post": {
        "tags": ["Applications"],
        "description": "Create a new application for your organization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name"],
                "properties": {
                  "name": { "type": "string" },
                  "description": { "type": "string" },
                  "hasDashboard": { "type": "boolean" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Application" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" },
          "422": { "$ref": "#/components/responses/422" },
          "500": { "$ref": "#/components/responses/500" }
        }
      }
    },
    "/organizations/{organizationId}/devices": {
      "get": {
        "tags": ["Devices"],
        "description": "List all the devices registered with your organization",
        "parameters": [
          { "$ref": "#/components/parameters/limit" },
          { "$ref": "#/components/parameters/organizationId" },
          { "$ref": "#/components/parameters/page" },
          { "$ref": "#/components/parameters/q" },
          { "$ref": "#/components/parameters/sort" },
          {
            "in": "query",
            "name": "productId",
            "description": "The device product ID to search for",
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "hasProduct",
            "description": "Either `true` to filter devices with a product, or `false` to disable this filter",
            "schema": { "type": "boolean" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Devices" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" },
          "500": { "$ref": "#/components/responses/500" }
        }
      }
    },
    "/organizations/{organizationId}/devices/{deviceSerial}": {
      "post": {
        "tags": ["Devices"],
        "description": "Register a device with your organization",
        "parameters": [
          { "$ref": "#/components/parameters/deviceSerial" },
          { "$ref": "#/components/parameters/organizationId" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "tags": { "type": "array", "items": { "type": "string" } },
                  "product": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string" },
                      "organizationId": { "type": "string" }
                    }
                  },
                  "location": { "$ref": "#/components/schemas/Location" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Device" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" },
          "422": { "$ref": "#/components/responses/422" },
          "500": { "$ref": "#/components/responses/500" }
        }
      }
    },
    "/organizations/{organizationId}/members": {
      "parameters": [{ "$ref": "#/components/parameters/organizationId" }],
      "get": {
        "tags": ["Organizations"],
        "description": "List all users who are members of your organization",
        "parameters": [
          { "$ref": "#/components/parameters/limit" },
          { "$ref": "#/components/parameters/page" },
          { "$ref": "#/components/parameters/q" },
          { "$ref": "#/components/parameters/sort" },
          {
            "in": "query",
            "name": "role",
            "description": "Filter members by their role",
            "schema": { "$ref": "#/components/schemas/OrganizationRole" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      { "$ref": "#/components/schemas/Member" },
                      {
                        "type": "object",
                        "properties": {
                          "role": {
                            "$ref": "#/components/schemas/OrganizationRole"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" },
          "500": { "$ref": "#/components/responses/500" }
        }
      }
    },
    "/organizations/{organizationId}/members/{memberId}": {
      "parameters": [
        { "$ref": "#/components/parameters/memberId" },
        { "$ref": "#/components/parameters/organizationId" }
      ],
      "put": {
        "tags": ["Organizations"],
        "description": "Add a member to your organization, or update an existing member",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "role": { "$ref": "#/components/schemas/OrganizationRole" }
                }
              }
            }
          }
        },
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" },
          "500": { "$ref": "#/components/responses/500" }
        }
      },
      "delete": {
        "tags": ["Organizations"],
        "description": "Remove a member from your organization. This will also remove the member from all the organization’s teams and it will no longer have access to any of the organization’s resources",
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" },
          "500": { "$ref": "#/components/responses/500" }
        }
      }
    },
    "/organizations/{organizationId}/products": {
      "parameters": [{ "$ref": "#/components/parameters/organizationId" }],
      "get": {
        "tags": ["Products"],
        "description": "List the products for your organization. Public products not owned by your organization are not listed",
        "parameters": [
          { "$ref": "#/components/parameters/limit" },
          { "$ref": "#/components/parameters/page" },
          { "$ref": "#/components/parameters/q" },
          { "$ref": "#/components/parameters/sort" }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Products" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" },
          "500": { "$ref": "#/components/responses/500" }
        }
      },
      "post": {
        "tags": ["Products"],
        "description": "Create a product for your organization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "version", "variables"],
                "properties": {
                  "name": { "type": "string" },
                  "version": { "type": "string" },
                  "variables": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/ProductVariable" }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Product" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" },
          "422": { "$ref": "#/components/responses/422" },
          "500": { "$ref": "#/components/responses/500" }
        }
      }
    },
    "/organizations/{organizationId}/teams": {
      "parameters": [{ "$ref": "#/components/parameters/organizationId" }],
      "get": {
        "tags": ["Teams"],
        "description": "List your organization’s teams",
        "parameters": [
          { "$ref": "#/components/parameters/limit" },
          { "$ref": "#/components/parameters/page" },
          { "$ref": "#/components/parameters/q" },
          { "$ref": "#/components/parameters/sort" }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Teams" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" },
          "500": { "$ref": "#/components/responses/500" }
        }
      },
      "post": {
        "tags": ["Teams"],
        "description": "Create a team for your organization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name"],
                "properties": {
                  "name": { "type": "string" },
                  "description": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Team" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" },
          "422": { "$ref": "#/components/responses/422" },
          "500": { "$ref": "#/components/responses/500" }
        }
      }
    },
    "/products": {
      "get": {
        "tags": ["Products"],
        "description": "List all the public products, whether they belong to your organization or not",
        "parameters": [
          { "$ref": "#/components/parameters/limit" },
          { "$ref": "#/components/parameters/page" },
          { "$ref": "#/components/parameters/q" },
          { "$ref": "#/components/parameters/sort" }
        ],
        "responses": {
          "200": {
            "description": "A list of products",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Products" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "500": { "$ref": "#/components/responses/500" }
        }
      }
    },
    "/products/{organizationId}/{productId}": {
      "parameters": [
        { "$ref": "#/components/parameters/organizationId" },
        { "$ref": "#/components/parameters/productId" }
      ],
      "get": {
        "tags": ["Products"],
        "description": "Get the details of one of your organization’s products, or of a public product not owned by your organization",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Product" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" },
          "500": { "$ref": "#/components/responses/500" }
        }
      },
      "put": {
        "tags": ["Products"],
        "description": "List all the public products, whether they belong to your organization or not",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "variables", "version"],
                "properties": {
                  "name": { "type": "string" },
                  "version": { "type": "string" },
                  "variables": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/ProductVariable" }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Product" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" },
          "422": { "$ref": "#/components/responses/422" },
          "500": { "$ref": "#/components/responses/500" }
        }
      },
      "delete": {
        "tags": ["Products"],
        "description": "Delete one of your organization’s products. This will only be possible if the product is not public, and not used by any device",
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" },
          "500": { "$ref": "#/components/responses/500" }
        }
      }
    },
    "/teams/{organizationId}/{teamId}": {
      "parameters": [
        { "$ref": "#/components/parameters/organizationId" },
        { "$ref": "#/components/parameters/teamId" }
      ],
      "get": {
        "tags": ["Teams"],
        "description": "Get the details of one of your organization’s teams",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Team" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" },
          "500": { "$ref": "#/components/responses/500" }
        }
      },
      "put": {
        "tags": ["Teams"],
        "description": "Update the details of one of your organization’s teams",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name"],
                "properties": {
                  "name": { "type": "string" },
                  "description": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Team" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" },
          "422": { "$ref": "#/components/responses/422" },
          "500": { "$ref": "#/components/responses/500" }
        }
      },
      "delete": {
        "tags": ["Teams"],
        "description": "Delete one of your organization’s teams",
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" },
          "500": { "$ref": "#/components/responses/500" }
        }
      }
    },
    "/teams/{organizationId}/{teamId}/applications": {
      "parameters": [
        { "$ref": "#/components/parameters/organizationId" },
        { "$ref": "#/components/parameters/teamId" }
      ],
      "get": {
        "tags": ["Teams"],
        "description": "List the applications of one of your organization’s teams",
        "parameters": [
          { "$ref": "#/components/parameters/limit" },
          { "$ref": "#/components/parameters/page" },
          { "$ref": "#/components/parameters/sort" }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      { "$ref": "#/components/schemas/ApplicationInArray" },
                      {
                        "type": "object",
                        "properties": {
                          "permission": {
                            "$ref": "#/components/schemas/ApplicationPermission"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" },
          "500": { "$ref": "#/components/responses/500" }
        }
      }
    },
    "/teams/{organizationId}/{teamId}/applications/{applicationId}": {
      "parameters": [
        { "$ref": "#/components/parameters/applicationId" },
        { "$ref": "#/components/parameters/memberId" },
        { "$ref": "#/components/parameters/organizationId" },
        { "$ref": "#/components/parameters/teamId" }
      ],
      "put": {
        "tags": ["Teams"],
        "description": "Add an application to one of your organization’s teams, or change the team application’s permission",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["permission"],
                "properties": {
                  "permission": {
                    "$ref": "#/components/schemas/ApplicationPermission"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" },
          "422": { "$ref": "#/components/responses/422" },
          "500": { "$ref": "#/components/responses/500" }
        }
      },
      "delete": {
        "tags": ["Teams"],
        "description": "Remove an application from one of your organization’s teams",
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" },
          "500": { "$ref": "#/components/responses/500" }
        }
      }
    },
    "/teams/{organizationId}/{teamId}/members": {
      "parameters": [
        { "$ref": "#/components/parameters/organizationId" },
        { "$ref": "#/components/parameters/teamId" }
      ],
      "get": {
        "tags": ["Teams"],
        "description": "List members of the specified team",
        "parameters": [
          { "$ref": "#/components/parameters/limit" },
          { "$ref": "#/components/parameters/page" },
          { "$ref": "#/components/parameters/sort" }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Member" }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" },
          "500": { "$ref": "#/components/responses/500" }
        }
      }
    },
    "/teams/{organizationId}/{teamId}/members/{memberId}": {
      "parameters": [
        { "$ref": "#/components/parameters/memberId" },
        { "$ref": "#/components/parameters/organizationId" },
        { "$ref": "#/components/parameters/teamId" }
      ],
      "put": {
        "tags": ["Teams"],
        "description": "Add a member to the team. If the member was already in the team, behaves as though it has just been added",
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" },
          "500": { "$ref": "#/components/responses/500" }
        }
      },
      "delete": {
        "tags": ["Teams"],
        "description": "Remove a member from one of your organization’s teams. The member is still part of your organization, but no longer has access to the resources shared by the team",
        "responses": {
          "204": { "$ref": "#/components/responses/204" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" },
          "500": { "$ref": "#/components/responses/500" }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Devices": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "serial": { "type": "string" },
            "name": { "type": "string" },
            "slug": { "type": "string" },
            "organizationId": { "type": "string" },
            "product": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "organizationId": { "type": "string" }
              }
            },
            "tags": { "type": "array", "items": { "type": "string" } }
          }
        }
      },
      "Device": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "serial": { "type": "string" },
          "name": { "type": "string" },
          "slug": { "type": "string" },
          "organizationId": { "type": "string" },
          "product": {
            "type": "object",
            "properties": {
              "id": { "type": "string" },
              "organizationId": { "type": "string" }
            }
          },
          "applicationCount": { "type": "number" },
          "location": { "$ref": "#/components/schemas/Location" },
          "tags": { "type": "array", "items": { "type": "string" } },
          "createdAt": { "type": "string" },
          "updatedAt": { "type": "string" }
        }
      },
      "Accounts": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "type": { "type": "string" },
            "name": { "type": "string" },
            "username": { "type": "string" },
            "gravatarURL": { "type": "string" }
          }
        }
      },
      "Account": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "email": { "type": "string" },
          "username": { "type": "string" },
          "name": { "type": "string" },
          "type": { "type": "string" },
          "gravatarURL": { "type": "string" },
          "createdAt": { "type": "string" },
          "updatedAt": { "type": "string" },
          "disabled": { "type": "boolean" }
        }
      },
      "Teams": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "name": { "type": "string" },
            "slug": { "type": "string" },
            "description": { "type": "string" },
            "organizationId": { "type": "string" }
          }
        }
      },
      "Team": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "slug": { "type": "string" },
          "description": { "type": "string" },
          "organizationId": { "type": "string" },
          "createdAt": { "type": "string" },
          "updatedAt": { "type": "string" }
        }
      },
      "Organization": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "username": { "type": "string" },
          "email": { "type": "string" },
          "role": { "$ref": "#/components/schemas/OrganizationRole" },
          "type": { "type": "string" },
          "memberCount": { "type": "number" },
          "disabled": { "type": "boolean" },
          "createdAt": { "type": "string" },
          "updatedAt": { "type": "string" }
        }
      },
      "Products": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": { "type": "string" },
            "name": { "type": "string" },
            "slug": { "type": "string" },
            "version": { "type": "string" },
            "organizationId": { "type": "string" },
            "public": { "type": "boolean" }
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "slug": { "type": "string" },
          "version": { "type": "string" },
          "organizationId": { "type": "string" },
          "variables": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ProductVariable" }
          },
          "public": { "type": "boolean" },
          "deviceCount": { "type": "number" },
          "createdAt": { "type": "string" },
          "updatedAt": { "type": "string" }
        }
      },
      "ProductVariable": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": { "type": "string" },
            "unit": { "type": "string" },
            "type": {
              "type": "string",
              "enum": [
                "BOOL",
                "TXT",
                "INT16",
                "INT64",
                "FLOAT32",
                "UNINT8",
                "UNINT16",
                "UNINT32"
              ]
            },
            "mappings": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "streamId": { "type": "number" },
                  "streamType": {
                    "type": "string",
                    "enum": ["BIN", "RAW", "TXT"]
                  },
                  "varNumber": { "type": "number" }
                }
              }
            }
          }
        }
      },
      "ApplicationInArray": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "slug": { "type": "string" },
          "organizationId": { "type": "string" },
          "description": { "type": "string" }
        }
      },
      "Application": {
        "allOf": [
          { "$ref": "#/components/schemas/ApplicationInArray" },
          {
            "type": "object",
            "properties": {
              "createdAt": { "type": "string" },
              "updatedAt": { "type": "string" },
              "hasDashboard": { "type": "boolean" },
              "permission": {
                "$ref": "#/components/schemas/ApplicationPermission"
              }
            }
          }
        ]
      },
      "ApplicationPermission": {
        "type": "string",
        "enum": ["write", "read"]
      },
      "Location": {
        "type": "object",
        "properties": {
          "lat": {
            "type": "number",
            "minimum": -90,
            "maximum": 90
          },
          "lon": {
            "type": "number",
            "minimum": -180,
            "maximum": 180
          }
        }
      },
      "Member": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "type": { "type": "string" },
          "name": { "type": "string" },
          "username": { "type": "string" },
          "gravatarURL": { "type": "string" }
        }
      },
      "OrganizationRole": {
        "type": "string",
        "enum": ["owner", "member"]
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    },
    "parameters": {
      "applicationId": {
        "in": "path",
        "name": "applicationId",
        "description": "The application id",
        "required": true,
        "schema": { "type": "string" }
      },
      "deviceSerial": {
        "in": "path",
        "name": "deviceSerial",
        "description": "The device serial",
        "required": true,
        "schema": { "type": "string" }
      },
      "limit": {
        "in": "query",
        "name": "limit",
        "description": "The number of items to be returned by page",
        "schema": { "type": "integer", "default": 10 }
      },
      "memberId": {
        "in": "path",
        "name": "memberId",
        "description": "The member account id",
        "required": true,
        "schema": { "type": "string" }
      },
      "organizationId": {
        "in": "path",
        "name": "organizationId",
        "description": "The organization id",
        "required": true,
        "schema": { "type": "string" }
      },
      "page": {
        "in": "query",
        "name": "page",
        "description": "The page number",
        "schema": { "type": "integer", "default": 1 }
      },
      "productId": {
        "in": "path",
        "name": "productId",
        "description": "The product id",
        "required": true,
        "schema": { "type": "string" }
      },
      "q": {
        "in": "query",
        "name": "q",
        "description": "The search regex",
        "schema": { "type": "string" }
      },
      "sort": {
        "in": "query",
        "name": "sort",
        "description": "The sort order",
        "schema": { "type": "string" }
      },
      "teamId": {
        "in": "path",
        "name": "teamId",
        "description": "The team id",
        "required": true,
        "schema": { "type": "string" }
      }
    },
    "responses": {
      "204": {
        "description": "No Content"
      },
      "401": {
        "description": "Unauthorized, your API key is not valid",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "404": {
        "description": "Not Found, the requested resource cannot be found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "422": {
        "description": "Unprocessable Entity, you have sent invalid fields (details are provided in the error body)",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "429": {
        "description": "Too Many Requests, API rate limit exceeded",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error, try again later or contact support",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
